<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.18">
  <POU Name="FB_FilterSecondaries" Id="{ff01b56a-17ce-43f7-9e9f-a72caca7f8b0}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_FilterSecondaries
VAR_INPUT
    bExecute : BOOL;
    nAddrSize : UINT;
    aAddr     : POINTER TO UINT;
    userNetId             : T_AmsNetId := '';
    sTerminalType : STRING := 'EL7031';
END_VAR
VAR_OUTPUT
    bBusy : BOOL := FALSE;
    nNumberFound : BYTE := 0;
    aFilteredUserSlaveAddr         : ARRAY[0..GVL_CPU.EC_MAX_SECONDARY] OF UINT;
END_VAR
VAR_IN_OUT
END_VAR
VAR
    rtExecute : R_TRIG;
    eState : E_State := E_State.Init;
    fb_coe_read           : FB_EcCoESdoRead;
    nCanidateIndex : BYTE := 0;
    sDeviceNameBuf : STRING(GVL_CPU.MAX_STRING_SIZE);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[CASE eState OF
E_State.Init:
    bBusy := TRUE;
    rtExecute(CLK:= bExecute);
    IF rtExecute.Q THEN
        fb_coe_read(bExecute := FALSE);// Prepare CoE-Access: Read an object/ sub index
        eState := E_State.Read;
    END_IF

E_State.Read:
    fb_coe_read(
    sNetId:= userNetId,
    nSlaveAddr:= aAddr[nCanidateIndex],
    nSubIndex:= 0,
    nIndex:= 16#1008,
    pDstBuf:= ADR(sDeviceNameBuf),
    cbBufLen:= GVL_CPU.MAX_STRING_SIZE,
    bExecute:= TRUE,
    tTimeout:= T#1S
   );
    eState := E_State.Idle;

E_State.Idle:
   fb_coe_read();        // Execute CoE read until done
   IF fb_coe_read.bError THEN
      eState := E_State.Error;     // Error case
   ELSE
      IF NOT fb_coe_read.bBusy THEN
             IF nCanidateIndex < nAddrSize THEN
                nCanidateIndex := nCanidateIndex + 1;
                eState := E_State.Read;
             ELSE
                bBusy := FALSE;
             END_IF
      END_IF
   END_IF

E_State.Error:
END_CASE]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>